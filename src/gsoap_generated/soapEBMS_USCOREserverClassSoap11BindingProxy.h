/* soapEBMS_USCOREserverClassSoap11BindingProxy.h
   Generated by gSOAP 2.8.12 from EBMS_serverClass.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapEBMS_USCOREserverClassSoap11BindingProxy_H
#define soapEBMS_USCOREserverClassSoap11BindingProxy_H
#include "soapH.h"
class EBMS_USCOREserverClassSoap11Binding
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'EBMS_USCOREserverClassSoap11Binding' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	EBMS_USCOREserverClassSoap11Binding()
	{ soap = soap_new(); endpoint = "http://localhost:8080/EBMS_server/services/EBMS_serverClass.EBMS_serverClassHttpSoap11Endpoint/ http://localhost:8080/EBMS_server/services/EBMS_serverClass.EBMS_serverClassHttpSoap12Endpoint/"; if (soap && !soap->namespaces) { static const struct Namespace namespaces[] = 
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://server.ebms", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap->namespaces = namespaces; } };
	/// Destructor frees deserialized data and soap engine context
	virtual ~EBMS_USCOREserverClassSoap11Binding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'doOperation' of service 'EBMS_USCOREserverClassSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns1__doOperation(_ns1__doOperation *ns1__doOperation, _ns1__doOperationResponse *ns1__doOperationResponse) { return soap ? soap_call___ns1__doOperation(soap, endpoint, NULL, ns1__doOperation, ns1__doOperationResponse) : SOAP_EOM; };
	/// Invoke 'login' of service 'EBMS_USCOREserverClassSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns1__login(_ns1__login *ns1__login, _ns1__loginResponse *ns1__loginResponse) { return soap ? soap_call___ns1__login(soap, endpoint, NULL, ns1__login, ns1__loginResponse) : SOAP_EOM; };
	/// Invoke 'hasPrivilege' of service 'EBMS_USCOREserverClassSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns1__hasPrivilege(_ns1__hasPrivilege *ns1__hasPrivilege, _ns1__hasPrivilegeResponse *ns1__hasPrivilegeResponse) { return soap ? soap_call___ns1__hasPrivilege(soap, endpoint, NULL, ns1__hasPrivilege, ns1__hasPrivilegeResponse) : SOAP_EOM; };
	/// Invoke 'doOperation' of service 'EBMS_USCOREserverClassSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns1__doOperation_(_ns1__doOperation *ns1__doOperation, _ns1__doOperationResponse *ns1__doOperationResponse) { return soap ? soap_call___ns1__doOperation_(soap, endpoint, NULL, ns1__doOperation, ns1__doOperationResponse) : SOAP_EOM; };
	/// Invoke 'login' of service 'EBMS_USCOREserverClassSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns1__login_(_ns1__login *ns1__login, _ns1__loginResponse *ns1__loginResponse) { return soap ? soap_call___ns1__login_(soap, endpoint, NULL, ns1__login, ns1__loginResponse) : SOAP_EOM; };
	/// Invoke 'hasPrivilege' of service 'EBMS_USCOREserverClassSoap11Binding' and return error code (or SOAP_OK)
	virtual int __ns1__hasPrivilege_(_ns1__hasPrivilege *ns1__hasPrivilege, _ns1__hasPrivilegeResponse *ns1__hasPrivilegeResponse) { return soap ? soap_call___ns1__hasPrivilege_(soap, endpoint, NULL, ns1__hasPrivilege, ns1__hasPrivilegeResponse) : SOAP_EOM; };
};
#endif
